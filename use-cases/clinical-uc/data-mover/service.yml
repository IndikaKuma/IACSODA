tosca_definitions_version: tosca_simple_yaml_1_3

imports:
  - modules/hpc/torque/main.yml
  - modules/hpc/image-puller/main.yml
  - modules/hpc/data/mover/main.yml
  - modules/openstack/openstack_security_rule.yaml
  - modules/openstack/openstack_vm.yaml

topology_template:

  inputs:
    hlrs-frontend-address:
      type: string
    hlrs-user:
      type: string
    hlrs-key-location:
      type: string
    egi-frontend-address:
      type: string
    egi-user:
      type: string
    egi-key-location:
      type: string
    email:
      type: string
    mapper-data-input:
      type: string
    mapper-data-output-struct:
      type: string
    solver-data:
      type: string
    ssh-key-name:  
      type: string 
    image-name:  
      type: string 
    openstack-network-name:  
      type: string 
    security-groups:  
      type: string    
    flavor-name:  
      type: string  
    userdata:
      type: string                 

  node_templates:

### base nodes
    hlrs-torque:
      type: sodalite.nodes.hpc.wm.torque
      attributes:
        public_address: { get_input: hlrs-frontend-address }
        username: { get_input: hlrs-user }
        ssh-key: { get_input: hlrs-key-location }

    egi-torque:
      type: sodalite.nodes.hpc.wm.torque
      attributes:
        public_address: { get_input: egi-frontend-address }
        username: { get_input: egi-user }
        ssh-key: { get_input: egi-key-location }

### prepare a VM for gridftp client
    security-rules-gridftp-client:  
      type: sodalite.nodes.OpenStack.SecurityRules 
      properties:  
        ports:  
          gridftp-control:  
            protocol: tcp 
            remote_ip_prefix: 0.0.0.0/0 
            port_range_min: 2811 
            port_range_max: 2811 
            direction: egress
          gridftp-data:  
            port_range_min: 50000 
            port_range_max: 50100 
            protocol: tcp 
            remote_ip_prefix: 0.0.0.0/0 
            direction: egress
        group_name: gridftp-client
        group_description: GridFTP Client - security group 

    gridftp-client-vm:  
      type: sodalite.nodes.OpenStack.VM 
      properties:  
        name:  gridftp-client
        key_name:         { get_input: ssh-key-name } 
        image:            { get_input: image-name }
        network:          { get_input: openstack-network-name } 
        security_groups:  { get_input: security-groups } 
        flavor:           { get_input: flavor-name }
        username: ubuntu
        userdata: { get_input: userdata }
      requirements:  
       - protected_by:  security-rules-gridftp-client

### prepare gridftp client on the VM
    gridftp-client:
      type: sodalite.data.mover.gridftp-client
      properties:
        cert_path: "/tmp/gridftp-certs"
        cert: "usercert.pem"
        key: "userkey.pem"
        certdir: "certificates"
        initial_data_path: "/tmp/gridftp-data"
        hostnames:
          gridftp.cyfronetostegi.pl: 149.156.182.102
          sodalite-fe.hlrs.de: 141.58.0.103
      requirements:
        - host: gridftp-client-vm

    input-data-transfer:
      type: sodalite.data.mover.gridftp
      properties:
        name: Transfer client data to server
        src_protocol: file
        src_address: localhost
        src_path: "/tmp/gridftp-data/"
        dst_protocol: gsiftp
        dst_address: gridftp.cyfronetostegi.pl
        dst_path: ~/gridftp-data/
      requirements:
        - client: gridftp-client
        - host: gridftp-client-vm

    certificate-transfer:
      type: sodalite.data.mover.gridftp
      properties:
        name: Transfer client certificates for image puller
        src_protocol: file
        src_address: localhost
        src_path: "/tmp/gridftp-certs/"
        dst_protocol: gsiftp
        dst_address: gridftp.cyfronetostegi.pl
        dst_path: ~/gridftp-certs/
      requirements:
        - client: gridftp-client
        - host: gridftp-client-vm

## image pulling
    cadt-image-egi:
      type: sodalite.image_puller.singularity
      properties:
        output: "cadt.sif"
        image: "cadt:1.0.0"
        registry: "private"
        certs_location: "gridftp-certs"
        images_location: "images"
      requirements:
        - host: egi-torque
        - dependency: certificate-transfer

    moduli-image-hlrs:
      type: sodalite.image_puller.singularity
      properties:
        output: "moduli.sif"
        image: "moduli:1.0.0"
        registry: "private"
        certs_location: "certs"
        images_location: "images"
      requirements:
        - host: hlrs-torque
        - dependency: certificate-transfer

### job configs
    density-mapping-job-config:
      type: sodalite.nodes.hpc.job.torque.configuration
      properties:
        name: density-mapping
        script: jobs/density-mapping-job.sh
        workspace: ~/gridftp-data/workflow-container
        ppn: 1
        walltime: 00:30:00
        email: { get_input: email }
        enable_audit: true
        env:
          IMAGES_DIR: /home/kamil/images
      requirements:
        - host: egi-torque
        - dependency: cadt-image-egi

    probabilistic-mapping-job-config:
      type: sodalite.nodes.hpc.job.torque.configuration
      properties:
        name: probabilistic-mapping
        script: jobs/probabilistic-mapping-job.sh
        workspace: ~/gridftp-data/workflow-container
        ppn: 4
        walltime: 00:30:00
        email: { get_input: email }
        enable_audit: true
        env:
          IMAGES_DIR: /mnt/nfs/home/kamil/images
          MPI_RANKS: 4
      requirements:
        - host: hlrs-torque
        - dependency: density-mapping-job-config

    boundary-condition-job-config:
      type: sodalite.nodes.hpc.job.torque.configuration
      properties:
        name: boundary-condition
        script: jobs/boundary-condition-job.sh
        workspace: ~/gridftp-data/workflow-container
        ppn: 1
        walltime: 00:30:00
        email: { get_input: email }
        enable_audit: true
        env:
          IMAGES_DIR: /home/kamil/images
      requirements:
        - host: egi-torque
        - dependency: cadt-image-egi

### job workflow
    density-mapping-job:
      type: sodalite.nodes.hpc.job.torque
      requirements:
        - host: egi-torque
        - configured_job: density-mapping-job-config

    density-mapping-output-transfer:
      type: sodalite.data.mover.gridftp
      properties:
        name: Transfer density-mapping output from egi to hlrs 
        src_protocol: gsiftp
        src_address: gridftp.cyfronetostegi.pl
        src_path: ~/gridftp-data/workflow-container/output/
        dst_protocol: gsiftp
        dst_address: sodalite-fe.hlrs.de
        dst_path: ~/gridftp-data/workflow-container/output/
      requirements:
        - client: gridftp-client
        - host: gridftp-client-vm
        - dependency: density-mapping-job-result

    probabilistic-mapping-job:
      type: sodalite.nodes.hpc.job.torque
      requirements:
        - host: hlrs-torque
        - configured_job: probabilistic-mapping-job-config
        - dependency: density-mapping-output-transfer

    probabilistic-mapping-output-transfer:
      type: sodalite.data.mover.gridftp
      properties:
        name: Transfer density-mapping output from hlrs to egi
        src_protocol: gsiftp
        src_address: sodalite-fe.hlrs.de
        src_path: ~/gridftp-data/workflow-container/output/
        dst_protocol: gsiftp
        dst_address: gridftp.cyfronetostegi.pl
        dst_path: ~/gridftp-data/workflow-container/output/
      requirements:
        - client: gridftp-client
        - host: gridftp-client-vm
        - dependency: probabilistic-mapping-job-result

    boundary-condition-job:
      type: sodalite.nodes.hpc.job.torque
      requirements:
        - host: egi-torque
        - configured_job: boundary-condition-job-config
        - dependency: probabilistic-mapping-output-transfer

    boundary-condition-output-transfer:
      type: sodalite.data.mover.gridftp
      properties:
        name: Transfer density-mapping output from egi back to client
        src_protocol: gsiftp
        src_address: gridftp.cyfronetostegi.pl
        src_path: ~/gridftp-data/workflow-container/fort.1234
        dst_protocol: file
        dst_address: localhost
        dst_path: /tmp/gridftp-data-result/
      requirements:
        - client: gridftp-client
        - host: gridftp-client-vm
        - dependency: boundary-condition-job-result

    workflow-output-transfer:
      type: sodalite.data.mover.gridftp
      properties:
        name: Transfer density-mapping output from egi back to client
        src_protocol: gsiftp
        src_address: gridftp.cyfronetostegi.pl
        src_path: ~/gridftp-data/workflow-container/output/
        dst_protocol: file
        dst_address: localhost
        dst_path: /tmp/gridftp-data-result/output/
      requirements:
        - client: gridftp-client
        - host: gridftp-client-vm
        - dependency: boundary-condition-job-result

### job result
    density-mapping-job-result:
      type: sodalite.nodes.hpc.job.torque.result
      requirements:
        - host: egi-torque
        - job: density-mapping-job

    probabilistic-mapping-job-result:
      type: sodalite.nodes.hpc.job.torque.result
      requirements:
        - host: hlrs-torque
        - job: probabilistic-mapping-job

    boundary-condition-job-result:
      type: sodalite.nodes.hpc.job.torque.result
      requirements:
        - host: egi-torque
        - job: boundary-condition-job