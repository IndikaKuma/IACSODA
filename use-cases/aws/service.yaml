tosca_definitions_version: tosca_simple_yaml_1_3

imports:
  - modules/aws/aws_security_rule.yaml
  - modules/aws/aws_vm.yaml
  - modules/docker/docker_host.yaml
  - modules/docker/docker_network.yaml
  - modules/docker/docker_registry.yaml
  - modules/docker/docker_component.yaml
  - modules/docker/docker_certificate.yaml
  - modules/docker/docker_volume.yaml
  - modules/misc/site/types.yaml
      

topology_template:

  inputs:  
    vpc-id:  
      type: string 
    region:  
      type: string 
    aws-access-key:  
      type: string 
    aws-secret-key:  
      type: string    
    vpc-subnet-id:
      type: string 
    ssh-key-name: 
      type: string 
    image-name: 
      type: string 
    security-groups: 
      type: list 
    flavor-name: 
      type: string 
    username: 
      type: string 

  node_templates: 

    security-aws-test:  
      type: sodalite.nodes.AWS.SecurityRules 
      properties:  
        rules:  
        - to_port: 8081 
          cidr_ip: 0.0.0.0/0 
          from_port: 8080 
          proto: tcp 
        - to_port: 80 
          cidr_ip: 0.0.0.0/0 
          from_port: 80 
          proto: tcp 
        group_name:  aws_test 
        group_description:  AWS test security group 
        vpc_id:                 { get_input: vpc-id } 
        region:                 { get_input: region } 
        aws_access_key:         { get_input: aws-access-key } 
        aws_secret_key:         { get_input: aws-secret-key } 

    aws-test-vm:  
      type: sodalite.nodes.AWS.VM
      properties:  
        name:  aws_test_vm_2
        key_name:                { get_input: ssh-key-name } 
        image:                   { get_input: image-name }
        network:                 { get_input: vpc-subnet-id } 
        security_groups:         { get_input: security-groups } 
        flavor:                  { get_input: flavor-name }
        username:                { get_input: username }
        region:                  { get_input: region } 
        aws_access_key:          { get_input: aws-access-key } 
        aws_secret_key:          { get_input: aws-secret-key } 
      requirements:  
       - protected_by: security-aws-test   
       
    aws-docker-host:  
      type: sodalite.nodes.DockerHost 
      requirements:  
        - host: aws-test-vm      

    docker-public-registry:
      type: sodalite.nodes.DockerRegistry
      properties:  
        docker_registry_url: registry.hub.docker.com
      requirements:
        - host: aws-test-vm
        
    site:
      type: sodalite.nodes.nginx.Site
      properties:  
        destination: /tmp/index.html
      requirements:
        - host: aws-test-vm
        
    nginx-container:
      type: sodalite.nodes.DockerizedComponent
      properties:
        image_name: library/nginx:latest
        volumes:
          - "/tmp/index.html:/usr/share/nginx/html/index.html"
        ports: ['80:80']
        alias: nginx-sodalite-test
      requirements:
        - host: aws-docker-host
        - registry: docker-public-registry   
        - dependency: site     
